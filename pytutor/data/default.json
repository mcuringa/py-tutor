[
{
    "fields": {
        "app_label": "auth",
        "model": "permission",
        "name": "permission"
    },
    "model": "contenttypes.contenttype",
    "pk": 1
},
{
    "fields": {
        "app_label": "auth",
        "model": "group",
        "name": "group"
    },
    "model": "contenttypes.contenttype",
    "pk": 2
},
{
    "fields": {
        "app_label": "auth",
        "model": "user",
        "name": "user"
    },
    "model": "contenttypes.contenttype",
    "pk": 3
},
{
    "fields": {
        "app_label": "contenttypes",
        "model": "contenttype",
        "name": "content type"
    },
    "model": "contenttypes.contenttype",
    "pk": 4
},
{
    "fields": {
        "app_label": "sessions",
        "model": "session",
        "name": "session"
    },
    "model": "contenttypes.contenttype",
    "pk": 5
},
{
    "fields": {
        "app_label": "tutor",
        "model": "question",
        "name": "question"
    },
    "model": "contenttypes.contenttype",
    "pk": 6
},
{
    "fields": {
        "app_label": "tutor",
        "model": "archivequestion",
        "name": "archive question"
    },
    "model": "contenttypes.contenttype",
    "pk": 7
},
{
    "fields": {
        "app_label": "tutor",
        "model": "test",
        "name": "test"
    },
    "model": "contenttypes.contenttype",
    "pk": 9
},
{
    "fields": {
        "app_label": "tutor",
        "model": "response",
        "name": "response"
    },
    "model": "contenttypes.contenttype",
    "pk": 10
},
{
    "fields": {
        "app_label": "tutor",
        "model": "questionflag",
        "name": "question flag"
    },
    "model": "contenttypes.contenttype",
    "pk": 11
},
{
    "fields": {
        "app_label": "tutor",
        "model": "friendconnect",
        "name": "friend connect"
    },
    "model": "contenttypes.contenttype",
    "pk": 12
},
{
    "fields": {
        "app_label": "tutor",
        "model": "message",
        "name": "message"
    },
    "model": "contenttypes.contenttype",
    "pk": 13
},
{
    "fields": {
        "expire_date": "2014-11-13T12:57:53.761Z",
        "session_data": "OWExNmIzNzkyZWFjY2JiZjk3YTc5MGMyOGE3Njg4Yzc0ZjlkMjQ3Nzp7Il9hdXRoX3VzZXJfaGFzaCI6Ijg5OTQ0MzM5NjMyNWMwZDdiYjJiMDJjOTJjZmU0MWUwYmU1ZmMyNzEiLCJfYXV0aF91c2VyX2lkIjoxLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCJ9"
    },
    "model": "sessions.session",
    "pk": "0mm57fp6q3tcn9dxj4ypcsgwrhhtwn8t"
},
{
    "fields": {
        "expire_date": "2014-11-05T19:09:16.143Z",
        "session_data": "ZDU2ZDBlZDA0YzNlN2NiMjcwMmRlZDQxOTM0MTk0NDc1YmM2NzlhYzp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9pZCI6MX0="
    },
    "model": "sessions.session",
    "pk": "0zy8y38lkvpdizfblwowyc4qwftbri01"
},
{
    "fields": {
        "expire_date": "2014-11-06T16:12:16.564Z",
        "session_data": "OWExNmIzNzkyZWFjY2JiZjk3YTc5MGMyOGE3Njg4Yzc0ZjlkMjQ3Nzp7Il9hdXRoX3VzZXJfaGFzaCI6Ijg5OTQ0MzM5NjMyNWMwZDdiYjJiMDJjOTJjZmU0MWUwYmU1ZmMyNzEiLCJfYXV0aF91c2VyX2lkIjoxLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCJ9"
    },
    "model": "sessions.session",
    "pk": "g163yazmjc3j39gznvphkmfp4amz7j6g"
},
{
    "fields": {
        "expire_date": "2014-10-30T01:18:01.847Z",
        "session_data": "ZDU2ZDBlZDA0YzNlN2NiMjcwMmRlZDQxOTM0MTk0NDc1YmM2NzlhYzp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9pZCI6MX0="
    },
    "model": "sessions.session",
    "pk": "git410mgr43ahznyyjv8z4zmzkyzxbmr"
},
{
    "fields": {
        "expire_date": "2014-10-30T14:20:56.880Z",
        "session_data": "NjNjMTkzNWMyNTQxM2ZiNzAwYWUzYWNmNDU4NDAwNmQ1ZDA1NjU5ODp7Il9hdXRoX3VzZXJfaWQiOjMsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0="
    },
    "model": "sessions.session",
    "pk": "hg22khtyiy6u312lk5p6yf1ayiaq5h2e"
},
{
    "fields": {
        "expire_date": "2014-11-13T05:48:14.616Z",
        "session_data": "MWEwNTNmNDJkOGJmNzQwMjZhNDQ1NDM1OTQyOWRhMmM1NjQ2NzUzODp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9pZCI6MSwiX2F1dGhfdXNlcl9oYXNoIjoiODk5NDQzMzk2MzI1YzBkN2JiMmIwMmM5MmNmZTQxZTBiZTVmYzI3MSJ9"
    },
    "model": "sessions.session",
    "pk": "kypx3k9xaimli1ki9df2eeoclu95pj67"
},
{
    "fields": {
        "expire_date": "2014-11-11T15:52:30.770Z",
        "session_data": "MWEwNTNmNDJkOGJmNzQwMjZhNDQ1NDM1OTQyOWRhMmM1NjQ2NzUzODp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9pZCI6MSwiX2F1dGhfdXNlcl9oYXNoIjoiODk5NDQzMzk2MzI1YzBkN2JiMmIwMmM5MmNmZTQxZTBiZTVmYzI3MSJ9"
    },
    "model": "sessions.session",
    "pk": "l7gbv5klaqc8hv5vw5v5po3avmkc7jgb"
},
{
    "fields": {
        "expire_date": "2014-11-10T16:19:46.048Z",
        "session_data": "YmQzYTU0MmMxZjczZWNiNzUzYTQ4M2UzODA2ZmZjNDdhOWJlMzdhOTp7Il9hdXRoX3VzZXJfaWQiOjIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiZGY5MjlkNTE5OGVmMGYwNWQwM2M4MTIwMDcyNjliNzZkOGI5MzAzMSJ9"
    },
    "model": "sessions.session",
    "pk": "q461w46nqgxt1jpty6ru4c85znsfcxfm"
},
{
    "fields": {
        "question": 1,
        "args": "[1,2,3]",
        "result": "6"
    },
    "model": "tutor.test",
    "pk": 1
},
{
    "fields": {
        "question": 3,
        "args": "3",
        "result": "True"
    },
    "model": "tutor.test",
    "pk": 2
},
{
    "fields": {
        "question": 3,
        "args": "4",
        "result": "False"
    },
    "model": "tutor.test",
    "pk": 3
},
{
    "fields": {
        "question": 3,
        "args": "7",
        "result": "True"
    },
    "model": "tutor.test",
    "pk": 4
},
{
    "fields": {
        "question": 3,
        "args": "8",
        "result": "False"
    },
    "model": "tutor.test",
    "pk": 5
},
{
    "fields": {
        "question": 2,
        "args": "4",
        "result": "50.26544"
    },
    "model": "tutor.test",
    "pk": 6
},
{
    "fields": {
        "question": 2,
        "args": "22",
        "result": "1520.52956"
    },
    "model": "tutor.test",
    "pk": 7
},
{
    "fields": {
        "question": 3,
        "args": "1987",
        "result": "True"
    },
    "model": "tutor.test",
    "pk": 8
},
{
    "fields": {
        "question": 4,
        "args": "4",
        "result": "2"
    },
    "model": "tutor.test",
    "pk": 9
},
{
    "fields": {
        "question": 4,
        "args": "5",
        "result": "2.5"
    },
    "model": "tutor.test",
    "pk": 10
},
{
    "fields": {
        "question": 5,
        "args": "[2,3,4]",
        "result": "29"
    },
    "model": "tutor.test",
    "pk": 11
},
{
    "fields": {
        "question": 6,
        "args": "3",
        "result": "9"
    },
    "model": "tutor.test",
    "pk": 12
},
{
    "fields": {
        "question": 6,
        "args": "144",
        "result": "432"
    },
    "model": "tutor.test",
    "pk": 13
},
{
    "fields": {
        "question": 7,
        "args": "2000, 2010",
        "result": "10"
    },
    "model": "tutor.test",
    "pk": 14
},
{
    "fields": {
        "question": 8,
        "args": "'matt'",
        "result": "'hello, matt'"
    },
    "model": "tutor.test",
    "pk": 17
},
{
    "fields": {
        "question": 3,
        "args": "9",
        "result": "False"
    },
    "model": "tutor.test",
    "pk": 20
},
{
    "fields": {
        "question": 9,
        "args": "\"aaaa\",\"bb\"",
        "result": "\"aaaa\""
    },
    "model": "tutor.test",
    "pk": 21
},
{
    "fields": {
        "question": 9,
        "args": "\"bbbb\",\"aa\"",
        "result": "\"bbbb\""
    },
    "model": "tutor.test",
    "pk": 22
},
{
    "fields": {
        "question": 9,
        "args": "\"aa\",\"bb\"",
        "result": "\"aa\""
    },
    "model": "tutor.test",
    "pk": 23
},
{
    "fields": {
        "codename": "add_permission",
        "content_type": 1,
        "name": "Can add permission"
    },
    "model": "auth.permission",
    "pk": 1
},
{
    "fields": {
        "codename": "change_permission",
        "content_type": 1,
        "name": "Can change permission"
    },
    "model": "auth.permission",
    "pk": 2
},
{
    "fields": {
        "codename": "delete_permission",
        "content_type": 1,
        "name": "Can delete permission"
    },
    "model": "auth.permission",
    "pk": 3
},
{
    "fields": {
        "codename": "add_group",
        "content_type": 2,
        "name": "Can add group"
    },
    "model": "auth.permission",
    "pk": 4
},
{
    "fields": {
        "codename": "change_group",
        "content_type": 2,
        "name": "Can change group"
    },
    "model": "auth.permission",
    "pk": 5
},
{
    "fields": {
        "codename": "delete_group",
        "content_type": 2,
        "name": "Can delete group"
    },
    "model": "auth.permission",
    "pk": 6
},
{
    "fields": {
        "codename": "add_user",
        "content_type": 3,
        "name": "Can add user"
    },
    "model": "auth.permission",
    "pk": 7
},
{
    "fields": {
        "codename": "change_user",
        "content_type": 3,
        "name": "Can change user"
    },
    "model": "auth.permission",
    "pk": 8
},
{
    "fields": {
        "codename": "delete_user",
        "content_type": 3,
        "name": "Can delete user"
    },
    "model": "auth.permission",
    "pk": 9
},
{
    "fields": {
        "codename": "add_contenttype",
        "content_type": 4,
        "name": "Can add content type"
    },
    "model": "auth.permission",
    "pk": 10
},
{
    "fields": {
        "codename": "change_contenttype",
        "content_type": 4,
        "name": "Can change content type"
    },
    "model": "auth.permission",
    "pk": 11
},
{
    "fields": {
        "codename": "delete_contenttype",
        "content_type": 4,
        "name": "Can delete content type"
    },
    "model": "auth.permission",
    "pk": 12
},
{
    "fields": {
        "codename": "add_session",
        "content_type": 5,
        "name": "Can add session"
    },
    "model": "auth.permission",
    "pk": 13
},
{
    "fields": {
        "codename": "change_session",
        "content_type": 5,
        "name": "Can change session"
    },
    "model": "auth.permission",
    "pk": 14
},
{
    "fields": {
        "codename": "delete_session",
        "content_type": 5,
        "name": "Can delete session"
    },
    "model": "auth.permission",
    "pk": 15
},
{
    "fields": {
        "codename": "add_question",
        "content_type": 6,
        "name": "Can add question"
    },
    "model": "auth.permission",
    "pk": 16
},
{
    "fields": {
        "codename": "change_question",
        "content_type": 6,
        "name": "Can change question"
    },
    "model": "auth.permission",
    "pk": 17
},
{
    "fields": {
        "codename": "delete_question",
        "content_type": 6,
        "name": "Can delete question"
    },
    "model": "auth.permission",
    "pk": 18
},
{
    "fields": {
        "codename": "add_archivequestion",
        "content_type": 7,
        "name": "Can add archive question"
    },
    "model": "auth.permission",
    "pk": 19
},
{
    "fields": {
        "codename": "change_archivequestion",
        "content_type": 7,
        "name": "Can change archive question"
    },
    "model": "auth.permission",
    "pk": 20
},
{
    "fields": {
        "codename": "delete_archivequestion",
        "content_type": 7,
        "name": "Can delete archive question"
    },
    "model": "auth.permission",
    "pk": 21
},
{
    "fields": {
        "codename": "add_test",
        "content_type": 9,
        "name": "Can add test"
    },
    "model": "auth.permission",
    "pk": 25
},
{
    "fields": {
        "codename": "change_test",
        "content_type": 9,
        "name": "Can change test"
    },
    "model": "auth.permission",
    "pk": 26
},
{
    "fields": {
        "codename": "delete_test",
        "content_type": 9,
        "name": "Can delete test"
    },
    "model": "auth.permission",
    "pk": 27
},
{
    "fields": {
        "codename": "add_response",
        "content_type": 10,
        "name": "Can add response"
    },
    "model": "auth.permission",
    "pk": 28
},
{
    "fields": {
        "codename": "change_response",
        "content_type": 10,
        "name": "Can change response"
    },
    "model": "auth.permission",
    "pk": 29
},
{
    "fields": {
        "codename": "delete_response",
        "content_type": 10,
        "name": "Can delete response"
    },
    "model": "auth.permission",
    "pk": 30
},
{
    "fields": {
        "codename": "add_questionflag",
        "content_type": 11,
        "name": "Can add question flag"
    },
    "model": "auth.permission",
    "pk": 31
},
{
    "fields": {
        "codename": "change_questionflag",
        "content_type": 11,
        "name": "Can change question flag"
    },
    "model": "auth.permission",
    "pk": 32
},
{
    "fields": {
        "codename": "delete_questionflag",
        "content_type": 11,
        "name": "Can delete question flag"
    },
    "model": "auth.permission",
    "pk": 33
},
{
    "fields": {
        "codename": "add_friendconnect",
        "content_type": 12,
        "name": "Can add friend connect"
    },
    "model": "auth.permission",
    "pk": 34
},
{
    "fields": {
        "codename": "change_friendconnect",
        "content_type": 12,
        "name": "Can change friend connect"
    },
    "model": "auth.permission",
    "pk": 35
},
{
    "fields": {
        "codename": "delete_friendconnect",
        "content_type": 12,
        "name": "Can delete friend connect"
    },
    "model": "auth.permission",
    "pk": 36
},
{
    "fields": {
        "codename": "add_message",
        "content_type": 13,
        "name": "Can add message"
    },
    "model": "auth.permission",
    "pk": 37
},
{
    "fields": {
        "codename": "change_message",
        "content_type": 13,
        "name": "Can change message"
    },
    "model": "auth.permission",
    "pk": 38
},
{
    "fields": {
        "codename": "delete_message",
        "content_type": 13,
        "name": "Can delete message"
    },
    "model": "auth.permission",
    "pk": 39
},
{
    "fields": {
        "username": "mxc",
        "first_name": "",
        "user_permissions": [],
        "last_login": "2014-10-30T12:57:53.651Z",
        "email": "",
        "groups": [],
        "is_superuser": false,
        "is_staff": false,
        "date_joined": "2014-10-16T01:18:01.262Z",
        "last_name": "",
        "is_active": true,
        "password": "pbkdf2_sha256$12000$sd1BXc3cofi7$/tMD8pbtfdyqqsSv5Lwra3itJghgW2A1FI2xmKlFosE="
    },
    "model": "auth.user",
    "pk": 1
},
{
    "fields": {
        "username": "katy",
        "first_name": "",
        "user_permissions": [],
        "last_login": "2014-10-27T16:19:45.906Z",
        "email": "",
        "groups": [],
        "is_superuser": false,
        "is_staff": false,
        "date_joined": "2014-10-16T01:21:15.489Z",
        "last_name": "",
        "is_active": true,
        "password": "pbkdf2_sha256$12000$Zpg5KZ9LV0Yg$CPbPAmsS27z733aJuXLbYj5rVHkNoU+IsSvF9aPp9kw="
    },
    "model": "auth.user",
    "pk": 2
},
{
    "fields": {
        "username": "davidf",
        "first_name": "",
        "user_permissions": [],
        "last_login": "2014-10-16T14:20:56.708Z",
        "email": "",
        "groups": [],
        "is_superuser": false,
        "is_staff": false,
        "date_joined": "2014-10-16T14:20:56.346Z",
        "last_name": "",
        "is_active": true,
        "password": "pbkdf2_sha256$12000$sIDrSu6HdFI9$lez6gzH7DMLErN/9q2y9mfZinxTFsNqKuz0QahkYhG8="
    },
    "model": "auth.user",
    "pk": 3
},
{
    "fields": {
        "creator": 2,
        "created": "2014-10-16T01:28:12.096Z",
        "level": 1,
        "tags": "iteration, tip5, ",
        "version": 2,
        "modified": "2014-10-28T16:35:02.414Z",
        "modifier": 1,
        "prompt": "Create a function that sums all the numbers in the list xs and return the total\r\n",
        "comment": "",
        "function_name": "listsum",
        "solution": "\r\ndef listsum(xs):\r\n    \r\n    running_total = 0\r\n    for x in xs:\r\n        running_total = running_total + x\r\n    return running_total\r\n"
    },
    "model": "tutor.question",
    "pk": 1
},
{
    "fields": {
        "creator": 1,
        "created": "2014-10-16T01:30:21.580Z",
        "level": 1,
        "tags": "functions, tip4, math, pi",
        "version": 6,
        "modified": "2014-10-30T02:20:05.219Z",
        "modifier": 1,
        "prompt": "Write a function ``area_of_circle(r)`` which returns the area of a circle of radius r.\r\n\r\n(Hint: if you can\u2019t remember how to find the area of a circle, look it up or ask a friend.)\r\n\r\n(Hint 2: use **3.14159** as the value for pi, to make sure your values match the\r\ntest casses.)\r\n\r\n",
        "comment": "",
        "function_name": "area_of_circle",
        "solution": "def area_of_circle(r):\r\n    return 3.14159 * r**2\r\n\r\n\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.question",
    "pk": 2
},
{
    "fields": {
        "creator": 2,
        "created": "2014-10-16T01:36:05.886Z",
        "level": 1,
        "tags": "iteration, tip5, math, primes",
        "version": 15,
        "modified": "2014-10-28T16:59:46.594Z",
        "modifier": 1,
        "prompt": "Write a function called ``is_prime`` that takes a number and returns\r\n``True`` if it is prime and ``False`` if it isn't.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "comment": "",
        "function_name": "is_prime",
        "solution": "\r\ndef is_prime(n):\r\n    \r\n    if n == 2: return True\r\n    \r\n    for i in range(2, n):\r\n        if n % i == 0:\r\n            return False\r\n    return True\r\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.question",
    "pk": 3
},
{
    "fields": {
        "creator": 1,
        "created": "2014-10-16T01:47:20.262Z",
        "level": 1,
        "tags": "functions, tip4",
        "version": 1,
        "modified": "2014-10-16T01:47:20.262Z",
        "modifier": 1,
        "prompt": "Write a function ``half(n)`` which divides n by 2 and returns the result.\r\n\r\n",
        "comment": "",
        "function_name": "half",
        "solution": "def half(n): return n/2\r\n"
    },
    "model": "tutor.question",
    "pk": 4
},
{
    "fields": {
        "creator": 2,
        "created": "2014-10-16T01:49:54.476Z",
        "level": 3,
        "tags": "iteration, tip5, math",
        "version": 7,
        "modified": "2014-10-30T13:03:13.925Z",
        "modifier": 1,
        "prompt": "Write a function ``called sum_of_squares`` that computes the sum of the square \r\nof the numbers in a list.\r\n\r\nFor example, if list x = [2,3,4], it should return 4+9+16 which is 29\r\nHint: use the built-in python function ``sum`` to make things easy on yourself.\r\n\r\n\r\n\r\n\r\n\r\n",
        "comment": "",
        "function_name": "sum_of_squares",
        "solution": "def sum_of_squares(t):\r\n    return sum([i**2 for i in t])\r\n\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.question",
    "pk": 5
},
{
    "fields": {
        "creator": 1,
        "created": "2014-10-16T01:50:49.562Z",
        "level": 1,
        "tags": "functions, tip4",
        "version": 1,
        "modified": "2014-10-16T01:50:49.562Z",
        "modifier": 1,
        "prompt": "Write a function ``triple(n)`` which multiplies n times 3 and returns the result.\r\n\r\n",
        "comment": "",
        "function_name": "triple",
        "solution": "def triple(n): return n * 3\r\n"
    },
    "model": "tutor.question",
    "pk": 6
},
{
    "fields": {
        "creator": 1,
        "created": "2014-10-16T13:21:53.990Z",
        "level": 1,
        "tags": "functions, tip4",
        "version": 1,
        "modified": "2014-10-16T13:21:53.990Z",
        "modifier": 1,
        "prompt": "Write a function ``how_old(yob, year)`` which determines who old a person will be if they where born in yob at  the end of ``year``.\r\n\r\n",
        "comment": "",
        "function_name": "how_old",
        "solution": "def how_old(yob, year): return year - yob\r\n"
    },
    "model": "tutor.question",
    "pk": 7
},
{
    "fields": {
        "creator": 1,
        "created": "2014-10-22T19:13:42.651Z",
        "level": 1,
        "tags": "tip4, strings, return",
        "version": 5,
        "modified": "2014-10-28T16:04:11.313Z",
        "modifier": 1,
        "prompt": "Write a function ``hello(name)`` which returns a ``String`` in the format of Hello, <name>. For example:\r\n``hello(\"matt\")`` returns the String 'hello, matt'.\r\n\r\n",
        "comment": "",
        "function_name": "hello",
        "solution": "def hello(name): \r\n    return \"hello, \" + name\r\n"
    },
    "model": "tutor.question",
    "pk": 8
},
{
    "fields": {
        "creator": 1,
        "created": "2014-10-29T19:15:09.103Z",
        "level": 2,
        "tags": "",
        "version": 1,
        "modified": "2014-10-29T19:15:09.103Z",
        "modifier": 1,
        "prompt": "Write a function that returns the longer of two words, or the first word if they are the same length.",
        "comment": "",
        "function_name": "longer_word",
        "solution": "def longer_word(s1,s2):\r\n    if len(s2) > len(s1):\r\n        return s2\r\n    return s1"
    },
    "model": "tutor.question",
    "pk": 9
},
{
    "fields": {
        "created": "2014-10-16T01:28:12.144Z",
        "modified": "2014-10-16T01:28:12.144Z",
        "solution": "\r\ndef listsum(xs):\r\n    \r\n    running_total = 0\r\n    for x in xs:\r\n        running_total = running_total + x\r\n    return running_total\r\n",
        "comment": "",
        "archived": "2014-10-16T01:28:12.144Z",
        "modifier": 2,
        "level": 1,
        "tags": "iteration, tip5, ",
        "parent": 1,
        "version": 1,
        "creator": 2,
        "function_name": "listsum",
        "prompt": "# Create a function that sums all the numbers in the list xs and return the total\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 1
},
{
    "fields": {
        "created": "2014-10-16T01:30:21.661Z",
        "modified": "2014-10-16T01:30:21.661Z",
        "solution": "def area_of_circle(r):\r\n    return 3.14159 * r * 2\r\n\r\n",
        "comment": "",
        "archived": "2014-10-16T01:30:21.661Z",
        "modifier": 1,
        "level": 1,
        "tags": "functions, tip4, math, pi",
        "parent": 2,
        "version": 1,
        "creator": 1,
        "function_name": "area_of_circle",
        "prompt": "\r\n\r\nWrite a function ``area_of_circle(r)`` which returns the area of a circle of radius r.\r\n(Hint: if you can\u2019t remember how to find the area of a circle, look it up or ask a friend.)\r\n(Hint 2: use 3.14159 as the value for pi)"
    },
    "model": "tutor.archivequestion",
    "pk": 2
},
{
    "fields": {
        "created": "2014-10-16T01:36:05.940Z",
        "modified": "2014-10-16T01:36:05.940Z",
        "solution": "def is_prime(n):\r\n    3 to n// if evenly divisible by \r\n    \r\n    for i in range(3, n):\r\n        if n % i == 0:\r\n            return False\r\n    return True\r\n            ",
        "comment": "",
        "archived": "2014-10-16T01:36:05.940Z",
        "modifier": 2,
        "level": 1,
        "tags": "iteration, tip5, math",
        "parent": 3,
        "version": 1,
        "creator": 2,
        "function_name": "is_prime",
        "prompt": "# write a function called is_prime that takes a number and returns True if it is prime and False if it isn't.\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 3
},
{
    "fields": {
        "created": "2014-10-16T01:36:54.949Z",
        "modified": "2014-10-16T01:36:54.949Z",
        "solution": "def is_prime(n):\r\n    \r\n    for i in range(3, n):\r\n        if n % i == 0:\r\n            return False\r\n    return True\r\n            \r\n\r\n",
        "comment": "",
        "archived": "2014-10-16T01:36:54.949Z",
        "modifier": 2,
        "level": 1,
        "tags": "iteration, tip5, math",
        "parent": 3,
        "version": 2,
        "creator": 2,
        "function_name": "is_prime",
        "prompt": "# write a function called is_prime that takes a number and returns True if it is prime and False if it isn't.\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 4
},
{
    "fields": {
        "created": "2014-10-16T01:39:23.334Z",
        "modified": "2014-10-16T01:39:23.334Z",
        "solution": "def area_of_circle(r):\r\n    return 3.14159 * r**2\r\n\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-16T01:39:23.334Z",
        "modifier": 1,
        "level": 1,
        "tags": "functions, tip4, math, pi",
        "parent": 2,
        "version": 2,
        "creator": 1,
        "function_name": "area_of_circle",
        "prompt": "\r\n\r\nWrite a function ``area_of_circle(r)`` which returns the area of a circle of radius r.\r\n(Hint: if you can\u2019t remember how to find the area of a circle, look it up or ask a friend.)\r\n(Hint 2: use 3.14159 as the value for pi)\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 5
},
{
    "fields": {
        "created": "2014-10-16T01:40:39.306Z",
        "modified": "2014-10-16T01:40:39.306Z",
        "solution": "def area_of_circle(r):\r\n    return 3.14159 * r**2\r\n\r\n\r\n\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-16T01:40:39.306Z",
        "modifier": 1,
        "level": 1,
        "tags": "functions, tip4, math, pi",
        "parent": 2,
        "version": 3,
        "creator": 1,
        "function_name": "area_of_circle",
        "prompt": "Write a function ``area_of_circle(r)`` which returns the area of a circle of radius r.\r\n(Hint: if you can\u2019t remember how to find the area of a circle, look it up or ask a friend.)\r\n(Hint 2: use 3.14159 as the value for pi)\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 6
},
{
    "fields": {
        "created": "2014-10-16T01:42:52.024Z",
        "modified": "2014-10-16T01:42:52.024Z",
        "solution": "def is_prime(n):\r\n    \r\n    if n == 2: return True\r\n    \r\n    for i in range(2, n):\r\n        if n % i == 0:\r\n            return False\r\n    return True\r\n            \r\n\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-16T01:42:52.024Z",
        "modifier": 1,
        "level": 1,
        "tags": "iteration, tip5, math",
        "parent": 3,
        "version": 3,
        "creator": 2,
        "function_name": "is_prime",
        "prompt": "# write a function called is_prime that takes a number and returns True if it is prime and False if it isn't.\r\n\r\n\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 7
},
{
    "fields": {
        "created": "2014-10-16T01:44:16.190Z",
        "modified": "2014-10-16T01:44:16.190Z",
        "solution": "def is_prime(n):\r\n    \r\n    if n == 2: return True\r\n    \r\n    for i in range(2, n):\r\n        if n % i == 0:\r\n            return False\r\n    return True\r\n            \r\n\r\n\r\n\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-16T01:44:16.190Z",
        "modifier": 1,
        "level": 1,
        "tags": "iteration, tip5, math",
        "parent": 3,
        "version": 4,
        "creator": 2,
        "function_name": "is_prime",
        "prompt": "# write a function called is_prime that takes a number and returns True if it is prime and False if it isn't.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 8
},
{
    "fields": {
        "created": "2014-10-16T01:44:24.816Z",
        "modified": "2014-10-16T01:44:24.816Z",
        "solution": "def is_prime(n):\r\n    \r\n    if n == 2: return True\r\n    \r\n    for i in range(2, n):\r\n        if n % i == 0:\r\n            return False\r\n    return True\r\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-16T01:44:24.816Z",
        "modifier": 1,
        "level": 1,
        "tags": "iteration, tip5, math, primes",
        "parent": 3,
        "version": 5,
        "creator": 2,
        "function_name": "is_prime",
        "prompt": "# write a function called is_prime that takes a number and returns True if it is prime and False if it isn't.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 9
},
{
    "fields": {
        "created": "2014-10-16T01:47:20.313Z",
        "modified": "2014-10-16T01:47:20.313Z",
        "solution": "def half(n): return n/2\r\n",
        "comment": "",
        "archived": "2014-10-16T01:47:20.313Z",
        "modifier": 1,
        "level": 1,
        "tags": "functions, tip4",
        "parent": 4,
        "version": 1,
        "creator": 1,
        "function_name": "half",
        "prompt": "Write a function ``half(n)`` which divides n by 2 and returns the result.\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 10
},
{
    "fields": {
        "created": "2014-10-16T01:49:54.529Z",
        "modified": "2014-10-16T01:49:54.529Z",
        "solution": "def sum_of_squares(my_list)\r\n    for item in range(my_list):\r\n        item ** 2\r\n        total = sum(item)\r\n        return total\r\n",
        "comment": "",
        "archived": "2014-10-16T01:49:54.529Z",
        "modifier": 2,
        "level": 1,
        "tags": "iteration, tip5, math",
        "parent": 5,
        "version": 1,
        "creator": 2,
        "function_name": "sum_of_squares",
        "prompt": "# write a function called sum_of_squares that computes the sum of the square of the numbers in a list\r\n# for example, if list x = [2,3,4], it should return 4+9+16 which is 29\r\n# use the built-in python function 'sum'\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 11
},
{
    "fields": {
        "created": "2014-10-16T01:50:49.634Z",
        "modified": "2014-10-16T01:50:49.634Z",
        "solution": "def triple(n): return n * 3\r\n",
        "comment": "",
        "archived": "2014-10-16T01:50:49.634Z",
        "modifier": 1,
        "level": 1,
        "tags": "functions, tip4",
        "parent": 6,
        "version": 1,
        "creator": 1,
        "function_name": "triple",
        "prompt": "Write a function ``triple(n)`` which multiplies n times 3 and returns the result.\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 12
},
{
    "fields": {
        "created": "2014-10-16T01:50:52.629Z",
        "modified": "2014-10-16T01:50:52.629Z",
        "solution": "def sum_of_squares(my_list)\r\n    for item in range(my_list):\r\n        newitem = item ** 2\r\n        total = sum(newitem)\r\n        return total\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-16T01:50:52.629Z",
        "modifier": 2,
        "level": 1,
        "tags": "iteration, tip5, math",
        "parent": 5,
        "version": 2,
        "creator": 2,
        "function_name": "sum_of_squares",
        "prompt": "# write a function called sum_of_squares that computes the sum of the square of the numbers in a list\r\n# for example, if list x = [2,3,4], it should return 4+9+16 which is 29\r\n# use the built-in python function 'sum'\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 13
},
{
    "fields": {
        "created": "2014-10-16T01:52:04.189Z",
        "modified": "2014-10-16T01:52:04.189Z",
        "solution": "def sum_of_squares(my_list)\r\n    total = []\r\n    my_list = range(my_list):\r\n        for item in my_list:\r\n            item ** 2\r\n        total.append(item)\r\n        total = sum(newitem)\r\n        return total\r\n\r\n\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-16T01:52:04.189Z",
        "modifier": 2,
        "level": 1,
        "tags": "iteration, tip5, math",
        "parent": 5,
        "version": 3,
        "creator": 2,
        "function_name": "sum_of_squares",
        "prompt": "# write a function called sum_of_squares that computes the sum of the square of the numbers in a list\r\n# for example, if list x = [2,3,4], it should return 4+9+16 which is 29\r\n# use the built-in python function 'sum'\r\n\r\n\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 14
},
{
    "fields": {
        "created": "2014-10-16T13:21:54.041Z",
        "modified": "2014-10-16T13:21:54.041Z",
        "solution": "def how_old(yob, year): return year - yob\r\n",
        "comment": "",
        "archived": "2014-10-16T13:21:54.041Z",
        "modifier": 1,
        "level": 1,
        "tags": "functions, tip4",
        "parent": 7,
        "version": 1,
        "creator": 1,
        "function_name": "how_old",
        "prompt": "Write a function ``how_old(yob, year)`` which determines who old a person will be if they where born in yob at  the end of ``year``.\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 15
},
{
    "fields": {
        "created": "2014-10-22T19:13:42.705Z",
        "modified": "2014-10-22T19:13:42.705Z",
        "solution": "def hello(name): return \"hello, \" + name\r\n",
        "comment": "",
        "archived": "2014-10-22T19:13:42.705Z",
        "modifier": 1,
        "level": 1,
        "tags": "tip4, strings, return",
        "parent": 8,
        "version": 1,
        "creator": 1,
        "function_name": "hellow",
        "prompt": "Write a function ``hello(name)`` which returns a ``String`` in the format of Hello, <name>. For example:\r\n``hello(\"matt\")`` returns the String 'hello, matt'.\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 16
},
{
    "fields": {
        "created": "2014-10-28T15:53:25.642Z",
        "modified": "2014-10-28T15:53:25.642Z",
        "solution": "def hello(name): return \"hello, \" + name\r\n",
        "comment": "",
        "archived": "2014-10-28T15:53:25.642Z",
        "modifier": 1,
        "level": 1,
        "tags": "tip4, strings, return",
        "parent": 8,
        "version": 2,
        "creator": 1,
        "function_name": "hello",
        "prompt": "Write a function ``hello(name)`` which returns a ``String`` in the format of Hello, <name>. For example:\r\n``hello(\"matt\")`` returns the String 'hello, matt'.\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 18
},
{
    "fields": {
        "created": "2014-10-28T15:57:46.628Z",
        "modified": "2014-10-28T15:57:46.628Z",
        "solution": "def hello(name): \r\n    return \"hello, \" + name\r\n",
        "comment": "",
        "archived": "2014-10-28T15:57:46.628Z",
        "modifier": 1,
        "level": 1,
        "tags": "tip4, strings, return",
        "parent": 8,
        "version": 3,
        "creator": 1,
        "function_name": "hello",
        "prompt": "Write a function ``hello(name)`` which returns a ``String`` in the format of Hello, <name>. For example:\r\n``hello(\"matt\")`` returns the String 'hello, matt'.\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 19
},
{
    "fields": {
        "created": "2014-10-28T15:59:30.450Z",
        "modified": "2014-10-28T15:59:30.450Z",
        "solution": "def hello(name): \r\n    return \"hellao, \" + name\r\n",
        "comment": "",
        "archived": "2014-10-28T15:59:30.450Z",
        "modifier": 1,
        "level": 1,
        "tags": "tip4, strings, return",
        "parent": 8,
        "version": 4,
        "creator": 1,
        "function_name": "hello",
        "prompt": "Write a function ``hello(name)`` which returns a ``String`` in the format of Hello, <name>. For example:\r\n``hello(\"matt\")`` returns the String 'hello, matt'.\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 20
},
{
    "fields": {
        "created": "2014-10-28T16:04:11.396Z",
        "modified": "2014-10-28T16:04:11.396Z",
        "solution": "def hello(name): \r\n    return \"hello, \" + name\r\n",
        "comment": "",
        "archived": "2014-10-28T16:04:11.396Z",
        "modifier": 1,
        "level": 1,
        "tags": "tip4, strings, return",
        "parent": 8,
        "version": 5,
        "creator": 1,
        "function_name": "hello",
        "prompt": "Write a function ``hello(name)`` which returns a ``String`` in the format of Hello, <name>. For example:\r\n``hello(\"matt\")`` returns the String 'hello, matt'.\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 21
},
{
    "fields": {
        "created": "2014-10-28T16:35:02.469Z",
        "modified": "2014-10-28T16:35:02.469Z",
        "solution": "\r\ndef listsum(xs):\r\n    \r\n    running_total = 0\r\n    for x in xs:\r\n        running_total = running_total + x\r\n    return running_total\r\n",
        "comment": "",
        "archived": "2014-10-28T16:35:02.469Z",
        "modifier": 1,
        "level": 1,
        "tags": "iteration, tip5, ",
        "parent": 1,
        "version": 2,
        "creator": 2,
        "function_name": "listsum",
        "prompt": "Create a function that sums all the numbers in the list xs and return the total\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 22
},
{
    "fields": {
        "created": "2014-10-28T16:42:02.503Z",
        "modified": "2014-10-28T16:42:02.503Z",
        "solution": "def is_prime(n):\r\n    \r\n    if n == 2: return True\r\n    \r\n    for i in range(2, n):\r\n        if n % i == 0:\r\n            return False\r\n    return True\r\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-28T16:42:02.503Z",
        "modifier": 1,
        "level": 1,
        "tags": "iteration, tip5, math, primes",
        "parent": 3,
        "version": 6,
        "creator": 2,
        "function_name": "is_prime",
        "prompt": "Write a function called ``is_prime`` that takes a number and returns\r\n``True`` if it is prime and ``False`` if it isn't.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 23
},
{
    "fields": {
        "created": "2014-10-28T16:55:57.486Z",
        "modified": "2014-10-28T16:55:57.486Z",
        "solution": "def is_prime(n):\r\n    \r\n    if n == 2: return True\r\n    \r\n    for i in range(2, Math.sqrt(n)):\r\n        if n % i == 0:\r\n            return False\r\n    return True\r\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-28T16:55:57.486Z",
        "modifier": 1,
        "level": 1,
        "tags": "iteration, tip5, math, primes",
        "parent": 3,
        "version": 7,
        "creator": 2,
        "function_name": "is_prime",
        "prompt": "Write a function called ``is_prime`` that takes a number and returns\r\n``True`` if it is prime and ``False`` if it isn't.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 24
},
{
    "fields": {
        "created": "2014-10-28T16:56:31.259Z",
        "modified": "2014-10-28T16:56:31.259Z",
        "solution": "def is_prime(n):\r\n    \r\n    if n == 2: return True\r\n    \r\n    for i in range(2, n**.5):\r\n        if n % i == 0:\r\n            return False\r\n    return True\r\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-28T16:56:31.259Z",
        "modifier": 1,
        "level": 1,
        "tags": "iteration, tip5, math, primes",
        "parent": 3,
        "version": 8,
        "creator": 2,
        "function_name": "is_prime",
        "prompt": "Write a function called ``is_prime`` that takes a number and returns\r\n``True`` if it is prime and ``False`` if it isn't.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 25
},
{
    "fields": {
        "created": "2014-10-28T16:56:57.401Z",
        "modified": "2014-10-28T16:56:57.401Z",
        "solution": "def is_prime(n):\r\n    \r\n    if n == 2: return True\r\n    \r\n    for i in range(2, int(n**.5)):\r\n        if n % i == 0:\r\n            return False\r\n    return True\r\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-28T16:56:57.401Z",
        "modifier": 1,
        "level": 1,
        "tags": "iteration, tip5, math, primes",
        "parent": 3,
        "version": 9,
        "creator": 2,
        "function_name": "is_prime",
        "prompt": "Write a function called ``is_prime`` that takes a number and returns\r\n``True`` if it is prime and ``False`` if it isn't.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 26
},
{
    "fields": {
        "created": "2014-10-28T16:58:23.425Z",
        "modified": "2014-10-28T16:58:23.425Z",
        "solution": "\r\ndef is_prime(n):\r\n    \r\n    if n == 2: return True\r\n    \r\n    for i in range(2, int(math.sqrt(n))):\r\n        if n % i == 0:\r\n            return False\r\n    return True\r\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-28T16:58:23.425Z",
        "modifier": 1,
        "level": 1,
        "tags": "iteration, tip5, math, primes",
        "parent": 3,
        "version": 10,
        "creator": 2,
        "function_name": "is_prime",
        "prompt": "Write a function called ``is_prime`` that takes a number and returns\r\n``True`` if it is prime and ``False`` if it isn't.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 27
},
{
    "fields": {
        "created": "2014-10-28T16:58:35.387Z",
        "modified": "2014-10-28T16:58:35.387Z",
        "solution": "import math\r\n\r\ndef is_prime(n):\r\n    \r\n    if n == 2: return True\r\n    \r\n    for i in range(2, int(math.sqrt(n))):\r\n        if n % i == 0:\r\n            return False\r\n    return True\r\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-28T16:58:35.387Z",
        "modifier": 1,
        "level": 1,
        "tags": "iteration, tip5, math, primes",
        "parent": 3,
        "version": 11,
        "creator": 2,
        "function_name": "is_prime",
        "prompt": "Write a function called ``is_prime`` that takes a number and returns\r\n``True`` if it is prime and ``False`` if it isn't.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 28
},
{
    "fields": {
        "created": "2014-10-28T16:58:52.984Z",
        "modified": "2014-10-28T16:58:52.984Z",
        "solution": "import math\r\n\r\ndef is_prime(n):\r\n    \r\n    if n == 2: return True\r\n    \r\n    for i in range(2, int(math.ceiling(math.sqrt(n)))):\r\n        if n % i == 0:\r\n            return False\r\n    return True\r\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-28T16:58:52.984Z",
        "modifier": 1,
        "level": 1,
        "tags": "iteration, tip5, math, primes",
        "parent": 3,
        "version": 12,
        "creator": 2,
        "function_name": "is_prime",
        "prompt": "Write a function called ``is_prime`` that takes a number and returns\r\n``True`` if it is prime and ``False`` if it isn't.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 29
},
{
    "fields": {
        "created": "2014-10-28T16:59:02.762Z",
        "modified": "2014-10-28T16:59:02.761Z",
        "solution": "import math\r\n\r\ndef is_prime(n):\r\n    \r\n    if n == 2: return True\r\n    \r\n    for i in range(2, int(math.ceil(math.sqrt(n)))):\r\n        if n % i == 0:\r\n            return False\r\n    return True\r\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-28T16:59:02.762Z",
        "modifier": 1,
        "level": 1,
        "tags": "iteration, tip5, math, primes",
        "parent": 3,
        "version": 13,
        "creator": 2,
        "function_name": "is_prime",
        "prompt": "Write a function called ``is_prime`` that takes a number and returns\r\n``True`` if it is prime and ``False`` if it isn't.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 30
},
{
    "fields": {
        "created": "2014-10-28T16:59:34.761Z",
        "modified": "2014-10-28T16:59:34.761Z",
        "solution": "import math\r\n\r\ndef is_prime(n):\r\n    \r\n    if n == 2: return True\r\n    \r\n    for i in range(2, n):\r\n        if n % i == 0:\r\n            return False\r\n    return True\r\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-28T16:59:34.761Z",
        "modifier": 1,
        "level": 1,
        "tags": "iteration, tip5, math, primes",
        "parent": 3,
        "version": 14,
        "creator": 2,
        "function_name": "is_prime",
        "prompt": "Write a function called ``is_prime`` that takes a number and returns\r\n``True`` if it is prime and ``False`` if it isn't.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 31
},
{
    "fields": {
        "created": "2014-10-28T16:59:46.645Z",
        "modified": "2014-10-28T16:59:46.645Z",
        "solution": "\r\ndef is_prime(n):\r\n    \r\n    if n == 2: return True\r\n    \r\n    for i in range(2, n):\r\n        if n % i == 0:\r\n            return False\r\n    return True\r\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-28T16:59:46.646Z",
        "modifier": 1,
        "level": 1,
        "tags": "iteration, tip5, math, primes",
        "parent": 3,
        "version": 15,
        "creator": 2,
        "function_name": "is_prime",
        "prompt": "Write a function called ``is_prime`` that takes a number and returns\r\n``True`` if it is prime and ``False`` if it isn't.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 32
},
{
    "fields": {
        "created": "2014-10-28T17:16:01.994Z",
        "modified": "2014-10-28T17:16:01.994Z",
        "solution": "def sum_of_squares(t):\r\n    total = [i**2 for i in range(t)]\r\n    return sum(total)\r\n\r\n\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-28T17:16:01.994Z",
        "modifier": 1,
        "level": 1,
        "tags": "iteration, tip5, math",
        "parent": 5,
        "version": 4,
        "creator": 2,
        "function_name": "sum_of_squares",
        "prompt": "Write a function ``called sum_of_squares`` that computes the sum of the square of the numbers in a list.\r\n\r\nFor example, if list x = [2,3,4], it should return 4+9+16 which is 29\r\nHint: use the built-in python function ``sum`` to make things easy on yourself.\r\n\r\n\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 33
},
{
    "fields": {
        "created": "2014-10-28T17:16:51.347Z",
        "modified": "2014-10-28T17:16:51.347Z",
        "solution": "def sum_of_squares(t):\r\n    return sum([i**2 for i in t])\r\n\r\n\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-28T17:16:51.347Z",
        "modifier": 1,
        "level": 1,
        "tags": "iteration, tip5, math",
        "parent": 5,
        "version": 5,
        "creator": 2,
        "function_name": "sum_of_squares",
        "prompt": "Write a function ``called sum_of_squares`` that computes the sum of the square of the numbers in a list.\r\n\r\nFor example, if list x = [2,3,4], it should return 4+9+16 which is 29\r\nHint: use the built-in python function ``sum`` to make things easy on yourself.\r\n\r\n\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 34
},
{
    "fields": {
        "created": "2014-10-28T17:18:29.169Z",
        "modified": "2014-10-28T17:18:29.169Z",
        "solution": "def area_of_circle(r):\r\n    return 3.14159 * r**2\r\n\r\n\r\n\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-28T17:18:29.169Z",
        "modifier": 1,
        "level": 1,
        "tags": "functions, tip4, math, pi",
        "parent": 2,
        "version": 4,
        "creator": 1,
        "function_name": "area_of_circle",
        "prompt": "Write a function ``area_of_circle(r)`` which returns the area of a circle of radius r.\r\n(Hint: if you can\u2019t remember how to find the area of a circle, look it up or ask a friend.)\r\n(Hint 2: use **3.14159** as the value for pi, to make sure your values match the\r\ntest casses.)\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 35
},
{
    "fields": {
        "created": "2014-10-28T17:19:16.660Z",
        "modified": "2014-10-28T17:19:16.660Z",
        "solution": "def area_of_circle(r):\r\n    return 3.14159 * r**2\r\n\r\n\r\n\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-28T17:19:16.660Z",
        "modifier": 1,
        "level": 1,
        "tags": "functions, tip4, math, pi",
        "parent": 2,
        "version": 5,
        "creator": 1,
        "function_name": "area_of_circle",
        "prompt": "Write a function ``area_of_circle(r)`` which returns the area of a circle of radius r.\r\n(Hint: if you can\u2019t remember how to find the area of a circle, look it up or ask a friend.)\r\n(Hint 2: use **3.14159** as the value for pi, to make sure your values match the\r\ntest casses.)\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 36
},
{
    "fields": {
        "created": "2014-10-29T19:15:09.154Z",
        "modified": "2014-10-29T19:15:09.154Z",
        "solution": "def longer_word(s1,s2):\r\n    if len(s2) > len(s1):\r\n        return s2\r\n    return s1",
        "comment": "",
        "archived": "2014-10-29T19:15:09.154Z",
        "modifier": 1,
        "level": 2,
        "tags": "",
        "parent": 9,
        "version": 1,
        "creator": 1,
        "function_name": "longer_word",
        "prompt": "Write a function that returns the longer of two words, or the first word if they are the same length."
    },
    "model": "tutor.archivequestion",
    "pk": 37
},
{
    "fields": {
        "created": "2014-10-30T02:20:05.320Z",
        "modified": "2014-10-30T02:20:05.320Z",
        "solution": "def area_of_circle(r):\r\n    return 3.14159 * r**2\r\n\r\n\r\n\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-30T02:20:05.320Z",
        "modifier": 1,
        "level": 1,
        "tags": "functions, tip4, math, pi",
        "parent": 2,
        "version": 6,
        "creator": 1,
        "function_name": "area_of_circle",
        "prompt": "Write a function ``area_of_circle(r)`` which returns the area of a circle of radius r.\r\n\r\n(Hint: if you can\u2019t remember how to find the area of a circle, look it up or ask a friend.)\r\n\r\n(Hint 2: use **3.14159** as the value for pi, to make sure your values match the\r\ntest casses.)\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 38
},
{
    "fields": {
        "created": "2014-10-30T13:03:00.434Z",
        "modified": "2014-10-30T13:03:00.434Z",
        "solution": "def sum_of_squares(t):\r\n    return sum([i**2 for i in t])\r\n\r\n\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-30T13:03:00.434Z",
        "modifier": 1,
        "level": 2,
        "tags": "iteration, tip5, math",
        "parent": 5,
        "version": 6,
        "creator": 2,
        "function_name": "sum_of_squares",
        "prompt": "Write a function ``called sum_of_squares`` that computes the sum of the square \r\nof the numbers in a list.\r\n\r\nFor example, if list x = [2,3,4], it should return 4+9+16 which is 29\r\nHint: use the built-in python function ``sum`` to make things easy on yourself.\r\n\r\n\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 39
},
{
    "fields": {
        "created": "2014-10-30T13:03:13.977Z",
        "modified": "2014-10-30T13:03:13.977Z",
        "solution": "def sum_of_squares(t):\r\n    return sum([i**2 for i in t])\r\n\r\n\r\n\r\n\r\n",
        "comment": "",
        "archived": "2014-10-30T13:03:13.977Z",
        "modifier": 1,
        "level": 3,
        "tags": "iteration, tip5, math",
        "parent": 5,
        "version": 7,
        "creator": 2,
        "function_name": "sum_of_squares",
        "prompt": "Write a function ``called sum_of_squares`` that computes the sum of the square \r\nof the numbers in a list.\r\n\r\nFor example, if list x = [2,3,4], it should return 4+9+16 which is 29\r\nHint: use the built-in python function ``sum`` to make things easy on yourself.\r\n\r\n\r\n\r\n\r\n\r\n"
    },
    "model": "tutor.archivequestion",
    "pk": 40
},
{
    "fields": {
        "submitted": "2014-10-16T14:28:14.099Z",
        "code": "# write a function called is_prime\r\ndef is_prime(foo):\r\n    if (foo is 0) or (foo is 1):\r\n        return False\r\n    else:\r\n        for a in range(2,foo):\r\n            if (foo%a == 0):\r\n                return False\r\n    return True\r\n        ",
        "question": 3,
        "is_correct": true,
        "user": 3,
        "attempt": 1
    },
    "model": "tutor.response",
    "pk": 1
},
{
    "fields": {
        "submitted": "2014-10-16T14:37:04.351Z",
        "code": "# write a function called sum_of_squares\r\n\r\n\r\n",
        "question": 5,
        "is_correct": false,
        "user": 3,
        "attempt": 1
    },
    "model": "tutor.response",
    "pk": 2
},
{
    "fields": {
        "submitted": "2014-10-24T00:42:24.661Z",
        "code": "# write a function called area_of_circle\r\n\r\ndef area_of_circle(r):\r\n    return 2*3.14(r)\r\n",
        "question": 2,
        "is_correct": false,
        "user": 2,
        "attempt": 1
    },
    "model": "tutor.response",
    "pk": 3
},
{
    "fields": {
        "submitted": "2014-10-24T00:46:06.215Z",
        "code": "# write a function called area_of_circle\r\n\r\ndef area_of_circle(r):\r\n    return (2* 3.14159)(r)   \r\n",
        "question": 2,
        "is_correct": false,
        "user": 2,
        "attempt": 2
    },
    "model": "tutor.response",
    "pk": 4
},
{
    "fields": {
        "submitted": "2014-10-24T00:55:10.595Z",
        "code": "# write a function called area_of_circle\r\ndef area_of_circle(r):\r\n    return  (3.14159(r)) ** 2\r\n\r\n",
        "question": 2,
        "is_correct": false,
        "user": 2,
        "attempt": 3
    },
    "model": "tutor.response",
    "pk": 5
},
{
    "fields": {
        "submitted": "2014-10-24T00:56:49.182Z",
        "code": "# write a function called area_of_circle\r\n\r\ndef area_of_circle(r):\r\n    return r**2 *  3.14159\r\n",
        "question": 2,
        "is_correct": true,
        "user": 2,
        "attempt": 4
    },
    "model": "tutor.response",
    "pk": 6
},
{
    "fields": {
        "submitted": "2014-10-28T16:35:28.021Z",
        "code": "# write a function called listsum\r\n\r\n\r\ndef listsum(t):\r\n    return sum(t)",
        "question": 1,
        "is_correct": true,
        "user": 1,
        "attempt": 1
    },
    "model": "tutor.response",
    "pk": 7
},
{
    "fields": {
        "submitted": "2014-10-28T16:36:15.138Z",
        "code": "# write a function called hello\r\n\r\ndef hello(name)\r\n    return \"hello, \" + name\r\n",
        "question": 8,
        "is_correct": true,
        "user": 1,
        "attempt": 1
    },
    "model": "tutor.response",
    "pk": 8
},
{
    "fields": {
        "submitted": "2014-10-28T16:37:02.163Z",
        "code": "# write a function called half\r\n\r\ndef half(n):\r\n    return n/2\r\n",
        "question": 4,
        "is_correct": true,
        "user": 1,
        "attempt": 1
    },
    "model": "tutor.response",
    "pk": 9
},
{
    "fields": {
        "submitted": "2014-10-28T16:38:46.037Z",
        "code": "# write a function called half\r\n\r\ndef half(n):\r\n    return n/2\r\n",
        "question": 4,
        "is_correct": true,
        "user": 1,
        "attempt": 2
    },
    "model": "tutor.response",
    "pk": 10
},
{
    "fields": {
        "submitted": "2014-10-28T18:36:10.101Z",
        "code": "# write a function called half\r\n\r\n\r\n",
        "question": 4,
        "is_correct": true,
        "user": 1,
        "attempt": 3
    },
    "model": "tutor.response",
    "pk": 11
},
{
    "fields": {
        "submitted": "2014-10-28T18:56:57.694Z",
        "code": "# write a function called half\r\n\r\n\r\n",
        "question": 4,
        "is_correct": true,
        "user": 1,
        "attempt": 4
    },
    "model": "tutor.response",
    "pk": 12
},
{
    "fields": {
        "submitted": "2014-10-28T18:57:25.295Z",
        "code": "# write a function called half\r\n\r\n\r\n",
        "question": 4,
        "is_correct": true,
        "user": 1,
        "attempt": 5
    },
    "model": "tutor.response",
    "pk": 13
},
{
    "fields": {
        "submitted": "2014-10-28T18:57:43.364Z",
        "code": "# write a function called half\r\n\r\n\r\n",
        "question": 4,
        "is_correct": true,
        "user": 1,
        "attempt": 6
    },
    "model": "tutor.response",
    "pk": 14
},
{
    "fields": {
        "submitted": "2014-10-28T18:58:57.896Z",
        "code": "# write a function called half\r\n\r\n\r\n",
        "question": 4,
        "is_correct": true,
        "user": 1,
        "attempt": 7
    },
    "model": "tutor.response",
    "pk": 15
},
{
    "fields": {
        "submitted": "2014-10-28T18:59:16.481Z",
        "code": "# write a function called half\r\n\r\n\r\n",
        "question": 4,
        "is_correct": true,
        "user": 1,
        "attempt": 8
    },
    "model": "tutor.response",
    "pk": 16
},
{
    "fields": {
        "submitted": "2014-10-28T19:02:06.739Z",
        "code": "# write a function called half\r\n\r\n\r\n",
        "question": 4,
        "is_correct": true,
        "user": 1,
        "attempt": 9
    },
    "model": "tutor.response",
    "pk": 17
},
{
    "fields": {
        "submitted": "2014-10-28T19:02:36.126Z",
        "code": "# write a function called half\r\n\r\n\r\n",
        "question": 4,
        "is_correct": true,
        "user": 1,
        "attempt": 10
    },
    "model": "tutor.response",
    "pk": 18
},
{
    "fields": {
        "submitted": "2014-10-29T23:28:00.165Z",
        "code": "# write a function called sum_of_squares\r\n\r\ndef sum_of_squares(t):\r\n    total = 0\r\n    for number in t:\r\n        sq = number * number\r\n        total = total + sq\r\n    \r\n    return totalz\r\n    \r\n\r\n",
        "question": 5,
        "is_correct": true,
        "user": 1,
        "attempt": 1
    },
    "model": "tutor.response",
    "pk": 19
}
]
